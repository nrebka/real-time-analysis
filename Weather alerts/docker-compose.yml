version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: projekt-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: projekt-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test:
        [
          "CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  producer:
    build: ./producer
    container_name: projekt-producer
    depends_on:
      kafka:
        condition: service_healthy
    env_file:
      - .env
      - ./producer/.env
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: weather_data
    command: python producer.py

  consumer:
    build: ./consumer
    container_name: projekt-consumer
    command: python consumer.py
    env_file:
      - .env
      - ./consumer/.env
    depends_on:
      kafka:
        condition: service_healthy

  email-consumer:
    build: ./consumer
    container_name: projekt-email-consumer
    command: python weather_email_consumer.py
    env_file:
      - .env
      - ./consumer/.env
    depends_on:
      kafka:
        condition: service_healthy

  dashboard:
    build: ./dashboard
    container_name: projekt-dashboard
    ports:
      - "8501:8501"
    env_file:
      - .env
      - ./dashboard/.env
    depends_on:
      kafka:
        condition: service_healthy